{
    isolate (:output:)
    call /:translate_nuc:/ [:*:_dw:] (:output:)
    output /\n:*:output:\n/
    exit
}
:translate_nuc: (:args:) 
isolate (:args:)
{
    match <fromend> [:args:] (:codon:) /[AGCT]{3}/ #parse out codon
    output /:*:args:/
    {
        {
            match (:codon:) /CC[AGCT]/
            alter (:codon:) /P/
        }
        alius
        {
            match (:codon:) /TT[CT]/ 
            alter (:codon:) /F/
        }
    
    
        alius
        {
            match (:codon:) /GC[ACGT]/ 
            alter (:codon:) /A/
        }
        alius
        {
            match (:codon:) /[AC]G[ACGT]/
            alter (:codon:) /R/
        }
        alius
        {
            match (:codon:) /TG[CT]/ 
            alter (:codon:) /C/
        }
        alius
        {
            match (:codon:) /CA[CT]/ 
            alter (:codon:) /H/
        }
    }
    output /:*:codon:\n/
    liaf
}
return 
