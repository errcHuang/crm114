{
    isolate (:data:) /:*:_dw:/
    { #translate codon to protein
        match <fromend> (:codon:) [:data:]/[AGCT]{3}/
        output /codon: :*:codon:\n/
        isolate (:protein:) 
        call /:translate_codon:/ [:*:codon:] (:protein:)
        output /protein: :*:protein:\n\n/
        liaf
    }
    alius
    { #translate proteins to codon
            
    }
}
:translate_codon: (:args:)
isolate (:args:)
{
    {
        match [:args:] /CC[AGCT]/
        return /P/
    }
    alius
    {
        match [:args:] /TT[CT]/ 
        return /F/
    }
    alius
    {
        match [:args:] /GC[ACGT]/ 
        return /A/
    }
    alius
    {
        match [:args:] /[AC]G[ACGT]/
        return /R/
    }
    alius
    {
        match [:args:] /TG[CT]/ 
        return /C/
    }
    alius
    {
        match (:args:) /CA[CT]/ 
        return /H/
    }
}
return /NOPE/
